plugins {
    id 'java'
    id 'org.springframework.boot' version '3.4.1'
    id 'io.spring.dependency-management' version '1.1.7'
    id 'org.openapi.generator' version '7.10.0'

}

group = 'com.rounak'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(23)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {

//    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
    implementation 'org.springframework.boot:spring-boot-starter-web'

    implementation 'org.openapitools:jackson-databind-nullable:0.2.6'

//	implementation 'org.springdoc:springdoc-openapi-ui:1.8.0'
//	implementation 'org.springdoc:springdoc-openapi-data-rest:1.8.0'

    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.7.0'


    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    developmentOnly 'org.springframework.boot:spring-boot-devtools'

}

tasks.named('test') {
    useJUnitPlatform()
}

openApiGenerate {
    generatorName = "spring"
    inputSpec = "$projectDir/../design/api/openapi.yaml"
    outputDir = "$projectDir/generated" // Output directory for generated code
    apiPackage = "com.rounak.pcs.api"
    modelPackage = "com.rounak.pcs.model"
    configOptions = [
            interfaceOnly    : "true", // Generate only interfaces
            useTags          : "true",
            validateSpec     : "false",
            useBeanValidation: "true",
            useJakartaEe     : "true"
    ]
}

tasks.named('compileJava') {
    dependsOn 'openApiGenerate'
    doFirst {
        source("$buildDir/generated/src/main/java")
    }
}
